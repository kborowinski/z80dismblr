A661: ld   sp,$9F14
A664: call $D05B
D05B: ld   a,$C9
D05D: ld   ($D026),a
D060: ld   ($D02A),a
D063: ld   ($D02E),a
D066: ld   ($D036),a
D069: ld   ($D03A),a
D06C: call $CCE6
CCE6: ld   a,$FF
CCE8: ld   ($601D),a
CCEB: ld   hl,$F809
CCEE: ld   a,($5CCD)
CCF1: or   a
CCF2: jr   z,$CCF7
CCF7: ld   ($6022),hl
CCFA: xor  a
CCFB: ld   ($6024),a
CCFE: ret
D06F: ld   hl,$0000
D072: ld   ($5CDA),hl
D075: ld   hl,$F809
D078: ld   ($6022),hl
D07B: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de


7CB9: call $8611
8611: ld   a,($6012)
8614: or   a
8615: ret  nz
7CBC: call $7CCA
7CCA: ld   a,($628D)
7CCD: or   a
7CCE: jr   z,$7CE3
7CD0: ld   hl,($628E)
7CD3: dec  a
7CD4: add  a,a
7CD5: add  a,l
7CD6: ld   l,a
7CD7: jr   nc,$7CDA
7CDA: ld   ($7EDB),hl
7CDD: ld   a,(hl)
7CDE: inc  hl
7CDF: ld   h,(hl)
7CE0: ld   l,a
7CE1: jr   $7D0F
7D0F: ld   a,(hl)
7D10: inc  hl
7D11: cp   $56
7D13: jr   z,$7D5C
7D15: cp   $57
7D17: jp   z,$7D99
7D1A: cp   $52
7D1C: jp   z,$7DB5
7D1F: cp   $5D
7D21: jp   z,$7DCA
7D24: cp   $5A
7D26: jp   z,$7DF9
7DF9: call $7EC4
7EC4: ld   de,($628B)
7EC8: ld   a,e
7EC9: or   d
7ECA: ret
7DFC: jr   nz,$7E06
7DFE: ld   e,(hl)
7DFF: inc  hl
7E00: ld   d,(hl)
7E01: ld   ($628B),de
7E05: dec  hl
7E06: inc  hl
7E07: inc  hl
7E08: ld   e,(hl)
7E09: inc  hl
7E0A: ld   d,(hl)
7E0B: push hl
7E0C: ex   de,hl
7E0D: call $7F73
7F73: jp   (hl)
77AE: ld   hl,($6481)


CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CFCF: ld   hl,$CCE5
CFD2: inc  (hl)
CFD3: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CF3A: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF49: ex   de,hl
CF4A: ld   e,(hl)
CF4B: inc  hl
CF4C: ld   d,(hl)
CF4D: inc  hl
CF4E: ex   de,hl
CF4F: ret
CF3D: ld   ($644E),hl
CF40: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
900A: ld   ($8FEF),hl
900D: ld   a,(hl)
900E: inc  hl
900F: ld   h,(hl)
9010: ld   l,a
9011: ld   ($8FED),hl
9014: ret
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CF3A: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF49: ex   de,hl
CF4A: ld   e,(hl)
CF4B: inc  hl
CF4C: ld   d,(hl)
CF4D: inc  hl
CF4E: ex   de,hl
CF4F: ret
CF3D: ld   ($644E),hl
CF40: jp   $CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CF3A: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF49: ex   de,hl
CF4A: ld   e,(hl)
CF4B: inc  hl
CF4C: ld   d,(hl)
CF4D: inc  hl
CF4E: ex   de,hl
CF4F: ret
CF3D: ld   ($644E),hl
CF40: jp   $CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF49: ex   de,hl
CF4A: ld   e,(hl)
CF4B: inc  hl
CF4C: ld   d,(hl)
CF4D: inc  hl
CF4E: ex   de,hl
CF4F: ret
CF59: ld   ($6450),hl
CF5C: jp   $CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 22 instructions)

CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CEEB: push de
CEEC: call $D036
D036: ret
CEEF: pop  de
CEF0: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF49: ex   de,hl
CF4A: ld   e,(hl)
CF4B: inc  hl
CF4C: ld   d,(hl)
CF4D: inc  hl
CF4E: ex   de,hl
CF4F: ret
CF59: ld   ($6450),hl
CF5C: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CF0E: push de
CF0F: call $F535
F535: push ix
F537: ld   ix,$0000
F53B: add  ix,sp
F53D: ld   hl,$FFF3
F540: add  hl,sp
F541: ld   sp,hl
F542: ld   hl,$6450
F545: ld   c,(hl)
F546: inc  hl
F547: ld   b,(hl)
F548: push bc
F549: ld   hl,$F6EA
F54C: push hl
F54D: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 518 instructions)

D918: inc  (ix-$01)

   (loops for 118 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D969: ld   c,(ix-$04)
D96C: ld   b,(ix-$03)
D96F: ld   d,h
D970: push de
D971: ld   e,l
D972: ld   a,(de)
D973: ld   hl,$FDF2
D976: ld   (hl),a
D977: inc  de
D978: ld   a,(de)
D979: inc  hl
D97A: ld   (hl),a
D97B: pop  de
D97C: jr   $D9A8

   (loops for 2 instructions)

D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F550: pop  af
F551: pop  af
F552: ld   (ix-$02),$4D
F556: ld   (ix-$01),$F4
F55A: ld   a,$01
F55C: push af
F55D: inc  sp
F55E: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F561: inc  sp
F562: ld   c,l
F563: ld   a,c
F564: rla
F565: sbc  a,a
F566: ld   b,a
F567: inc  bc
F568: inc  bc
F569: ld   (ix-$09),c
F56C: ld   (ix-$08),b
F56F: ld   a,(ix-$09)
F572: add  a,$FF
F574: ld   (ix-$04),a
F577: ld   a,(ix-$08)
F57A: adc  a,$FF
F57C: ld   (ix-$03),a
F57F: ld   (ix-$0b),$00
F583: ld   (ix-$0a),$00
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 25 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 42 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F491: inc  l
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F497: inc  l
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F5F2: ld   a,(ix-$0c)
F5F5: or   a
F5F6: jr   nz,$F60B
F5F8: call $F4BC
F4BC: ld   a,$16
F4BE: push af
F4BF: inc  sp
F4C0: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 19 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4C3: inc  sp
F4C4: ld   a,l
F4C5: add  a,$41
F4C7: ld   l,a
F4C8: sub  $46
F4CA: jr   c,$F4CD
F4CC: inc  l
F4CD: ld   a,l
F4CE: sub  $51
F4D0: jr   c,$F4D3
F4D2: inc  l
F4D3: ld   a,l
F4D4: sub  $58
F4D6: jr   c,$F4D9
F4D9: ld   a,l
F4DA: sub  $59
F4DC: ret  c
F5FB: ld   c,l
F5FC: ld   l,(ix-$02)
F5FF: ld   h,(ix-$01)
F602: ld   (hl),c
F603: inc  (ix-$02)
F606: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F61F: ld   a,$0A
F621: push af
F622: inc  sp
F623: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F626: inc  sp
F627: ld   a,l
F628: xor  $80
F62A: sub  $84
F62C: jr   nc,$F660
F62E: ld   a,$02
F630: push af
F631: inc  sp
F632: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 50 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F635: inc  sp
F636: ld   c,l
F637: ld   e,(ix-$02)
F63A: ld   d,(ix-$01)
F63D: inc  de
F63E: ld   a,c
F63F: or   a
F640: jr   nz,$F652
F642: ld   l,(ix-$02)
F645: ld   h,(ix-$01)
F648: ld   (hl),$27
F64A: ld   (ix-$02),e
F64D: ld   (ix-$01),d
F650: jr   $F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 22 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 46 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F491: inc  l
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F497: inc  l
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49D: inc  l
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A3: inc  l
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4A9: inc  l
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F66C: ld   c,(ix-$02)
F66F: ld   b,(ix-$01)
F672: dec  bc
F673: ld   a,(bc)
F674: ld   d,a
F675: inc  bc
F676: push bc
F677: push de
F678: inc  sp
F679: call $F501
F501: push ix
F503: ld   ix,$0000
F507: add  ix,sp
F509: ld   a,(ix+$04)
F50C: sub  $41
F50E: jr   z,$F52C
F510: ld   a,(ix+$04)
F513: sub  $45
F515: jr   z,$F52C
F517: ld   a,(ix+$04)
F51A: sub  $49
F51C: jr   z,$F52C
F51E: ld   a,(ix+$04)
F521: sub  $4F
F523: jr   z,$F52C
F52C: ld   l,$01
F52E: jr   $F532
F532: pop  ix
F534: ret
F67C: inc  sp
F67D: ld   a,l
F67E: pop  bc
F67F: or   a
F680: jr   nz,$F686
F686: push bc
F687: ld   a,$03
F689: push af
F68A: inc  sp
F68B: ld   hl,$F474
F68E: push hl
F68F: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 26 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F692: pop  af
F693: inc  sp
F694: ld   a,l
F695: pop  bc
F696: ld   (bc),a
F697: inc  bc
F698: push bc
F699: ld   a,$04
F69B: push af
F69C: inc  sp
F69D: ld   hl,$F477
F6A0: push hl
F6A1: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 23 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F6A4: pop  af
F6A5: inc  sp
F6A6: ld   a,l
F6A7: pop  bc
F6A8: ld   (bc),a
F6A9: inc  bc
F6AA: xor  a
F6AB: ld   (bc),a
F6AC: push bc
F6AD: ld   hl,$F44D
F6B0: push hl
F6B1: ld   hl,$F706
F6B4: push hl
F6B5: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 312 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D95D: sub  $73
D95F: jr   z,$D98B
D98B: ld   c,(ix-$04)
D98E: ld   b,(ix-$03)
D991: ld   d,(hl)
D992: inc  hl
D993: ld   h,(hl)
D994: push bc
D995: push de
D996: ld   l,d
D997: push hl
D998: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC

   (loops for 53 instructions)

D8E8: pop  ix
D8EA: ret
D99B: pop  af
D99C: pop  de
D99D: pop  bc
D99E: jr   $D9A8
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)

   (loops for 13 instructions)

D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F6B8: pop  af
F6B9: pop  af
F6BA: pop  bc
F6BB: ld   a,c
F6BC: sub  $4D
F6BE: ld   c,a
F6BF: ld   a,b
F6C0: sbc  a,$F4
F6C2: ld   a,c
F6C3: rla
F6C4: sbc  a,a
F6C5: ld   b,a
F6C6: inc  bc
F6C7: sra  b
F6C9: rr   c
F6CB: ld   a,$0B
F6CD: sub  c
F6CE: ld   c,a
F6CF: ld   hl,$F44C
F6D2: ld   (hl),c
F6D3: ld   hl,($F447)
F6D6: ld   a,l
F6D7: and  $70
F6D9: ld   l,a
F6DA: ld   a,c
F6DB: rla
F6DC: sbc  a,a
F6DD: ld   b,a
F6DE: add  hl,bc
F6DF: ld   c,l
F6E0: ld   b,h
F6E1: ld   ($F447),bc
F6E5: ld   sp,ix
F6E7: pop  ix
F6E9: ret
CF12: ld   hl,$F438
CF15: call $D03A
D03A: ret
CF18: ld   hl,$F447
CF1B: call $D03A
D03A: ret
CF1E: ld   hl,$F462
CF21: call $D03A

   (loops for 1 instructions)

CF24: pop  de
CF25: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
D021: and  $07
D023: or   $40
D025: ret
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF99: jr   $CF9E
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CE8E: ld   hl,$601C
CE91: set  2,(hl)
CE93: ld   hl,$601D
CE96: set  2,(hl)
CE98: ld   a,(de)
CE99: inc  de
CE9A: ld   ($6013),a
CE9D: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CEA0: ld   ($6F2F),a
CEA3: push de
CEA4: call $D02E
D02E: ret
CEA7: pop  de
CEA8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 27 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 25 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CF5F: ld   a,(de)
CF60: inc  de
CF61: ld   ($601D),a
CF64: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CEAB: xor  a
CEAC: jr   $CEB0
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 9 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CF5F: ld   a,(de)
CF60: inc  de
CF61: ld   ($601D),a
CF64: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CF5F: ld   a,(de)
CF60: inc  de
CF61: ld   ($601D),a
CF64: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CD78: cp   $86
CD7A: jp   z,$CFD6
CFD6: ld   hl,$CCE5
CFD9: dec  (hl)
CFDA: jp   nz,$CD10
CFDD: push de
CFDE: call $DCE3
DCE3: ld   a,($63F5)
DCE6: ld   c,a
DCE7: rla
DCE8: sbc  a,a
DCE9: ld   b,a
DCEA: ld   de,$63F7
DCED: xor  a
DCEE: cp   c
DCEF: sbc  a,b
DCF0: jp   po,$DCF5
DCF5: jp   p,$DD0C
DD0C: ld   hl,$63D4
DD0F: push hl
DD10: call $7710
7710: ld   hl,$0002
7713: add  hl,sp
7714: ld   a,(hl)
7715: inc  hl
7716: ld   h,(hl)
7717: ld   l,a
7718: jr   $76EF
76EF: ld   (hl),$00
76F1: ret
DD13: ld   hl,$63F5
DD16: ex   (sp),hl
DD17: call $7710
7710: ld   hl,$0002
7713: add  hl,sp
7714: ld   a,(hl)
7715: inc  hl
7716: ld   h,(hl)
7717: ld   l,a
7718: jr   $76EF
76EF: ld   (hl),$00
76F1: ret
DD1A: ld   hl,$6416
DD1D: ex   (sp),hl
DD1E: call $7710

   (loops for 9 instructions)

DD21: pop  af
DD22: ret
CFE1: call $7B44
7B44: ld   hl,$629D
7B47: ld   bc,$00A0
7B4A: xor  a
7B4B: jp   $746D
746D: ld   (hl),a
746E: ld   e,l
746F: ld   d,h
7470: inc  de
7471: dec  bc
7472: ldir
7472: ldir

   (loops for 157 instructions)

7474: ret
CFE4: xor  a
CFE5: ld   ($601C),a
CFE8: ld   ($616F),a
CFEB: ld   ($6FAC),a
CFEE: ld   ($601F),a
CFF1: ld   ($601B),a
CFF4: ld   ($6FAF),a
CFF7: ld   ($6178),a
CFFA: call $A3D5
A3D5: ld   a,($9F17)
A3D8: or   a
A3D9: ret  z
CFFD: pop  de
CFFE: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D07E: ld   de,($6022)
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 25 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 11 instructions)

8B95: add  hl,de

   (loops for 4 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 12 instructions)

7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 11 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CD78: cp   $86
CD7A: jp   z,$CFD6
CFD6: ld   hl,$CCE5
CFD9: dec  (hl)
CFDA: jp   nz,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CEAE: ld   a,(de)
CEAF: inc  de
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 8 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A

   (loops for 5 instructions)

D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CEEB: push de
CEEC: call $D036
D036: ret
CEEF: pop  de
CEF0: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF49: ex   de,hl
CF4A: ld   e,(hl)
CF4B: inc  hl
CF4C: ld   d,(hl)
CF4D: inc  hl
CF4E: ex   de,hl
CF4F: ret
CF59: ld   ($6450),hl
CF5C: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CF0E: push de
CF0F: call $F535
F535: push ix
F537: ld   ix,$0000
F53B: add  ix,sp
F53D: ld   hl,$FFF3
F540: add  hl,sp
F541: ld   sp,hl
F542: ld   hl,$6450
F545: ld   c,(hl)
F546: inc  hl
F547: ld   b,(hl)
F548: push bc
F549: ld   hl,$F6EA
F54C: push hl
F54D: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 518 instructions)

D918: inc  (ix-$01)

   (loops for 118 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D969: ld   c,(ix-$04)
D96C: ld   b,(ix-$03)
D96F: ld   d,h
D970: push de
D971: ld   e,l
D972: ld   a,(de)
D973: ld   hl,$FDF2
D976: ld   (hl),a
D977: inc  de
D978: ld   a,(de)
D979: inc  hl
D97A: ld   (hl),a
D97B: pop  de
D97C: jr   $D9A8

   (loops for 2 instructions)

D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F550: pop  af
F551: pop  af
F552: ld   (ix-$02),$4D
F556: ld   (ix-$01),$F4
F55A: ld   a,$01
F55C: push af
F55D: inc  sp
F55E: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F561: inc  sp
F562: ld   c,l
F563: ld   a,c
F564: rla
F565: sbc  a,a
F566: ld   b,a
F567: inc  bc
F568: inc  bc
F569: ld   (ix-$09),c
F56C: ld   (ix-$08),b
F56F: ld   a,(ix-$09)
F572: add  a,$FF
F574: ld   (ix-$04),a
F577: ld   a,(ix-$08)
F57A: adc  a,$FF
F57C: ld   (ix-$03),a
F57F: ld   (ix-$0b),$00
F583: ld   (ix-$0a),$00
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 27 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 42 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 13 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F61F: ld   a,$0A
F621: push af
F622: inc  sp
F623: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 13 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F626: inc  sp
F627: ld   a,l
F628: xor  $80
F62A: sub  $84
F62C: jr   nc,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 44 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 30 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F66C: ld   c,(ix-$02)
F66F: ld   b,(ix-$01)
F672: dec  bc
F673: ld   a,(bc)
F674: ld   d,a
F675: inc  bc
F676: push bc
F677: push de
F678: inc  sp
F679: call $F501
F501: push ix
F503: ld   ix,$0000
F507: add  ix,sp
F509: ld   a,(ix+$04)
F50C: sub  $41
F50E: jr   z,$F52C
F510: ld   a,(ix+$04)
F513: sub  $45
F515: jr   z,$F52C
F517: ld   a,(ix+$04)
F51A: sub  $49
F51C: jr   z,$F52C
F51E: ld   a,(ix+$04)
F521: sub  $4F
F523: jr   z,$F52C
F52C: ld   l,$01
F52E: jr   $F532
F532: pop  ix
F534: ret
F67C: inc  sp
F67D: ld   a,l
F67E: pop  bc
F67F: or   a
F680: jr   nz,$F686
F686: push bc
F687: ld   a,$03
F689: push af
F68A: inc  sp
F68B: ld   hl,$F474
F68E: push hl
F68F: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 27 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F692: pop  af
F693: inc  sp
F694: ld   a,l
F695: pop  bc
F696: ld   (bc),a
F697: inc  bc
F698: push bc
F699: ld   a,$04
F69B: push af
F69C: inc  sp
F69D: ld   hl,$F477
F6A0: push hl
F6A1: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F6A4: pop  af
F6A5: inc  sp
F6A6: ld   a,l
F6A7: pop  bc
F6A8: ld   (bc),a
F6A9: inc  bc
F6AA: xor  a
F6AB: ld   (bc),a
F6AC: push bc
F6AD: ld   hl,$F44D
F6B0: push hl
F6B1: ld   hl,$F706
F6B4: push hl
F6B5: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 312 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D95D: sub  $73
D95F: jr   z,$D98B
D98B: ld   c,(ix-$04)
D98E: ld   b,(ix-$03)
D991: ld   d,(hl)
D992: inc  hl
D993: ld   h,(hl)
D994: push bc
D995: push de
D996: ld   l,d
D997: push hl
D998: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC

   (loops for 37 instructions)

D8E8: pop  ix
D8EA: ret
D99B: pop  af
D99C: pop  de
D99D: pop  bc
D99E: jr   $D9A8
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)

   (loops for 13 instructions)

D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F6B8: pop  af
F6B9: pop  af
F6BA: pop  bc
F6BB: ld   a,c
F6BC: sub  $4D
F6BE: ld   c,a
F6BF: ld   a,b
F6C0: sbc  a,$F4
F6C2: ld   a,c
F6C3: rla
F6C4: sbc  a,a
F6C5: ld   b,a
F6C6: inc  bc
F6C7: sra  b
F6C9: rr   c
F6CB: ld   a,$0B
F6CD: sub  c
F6CE: ld   c,a
F6CF: ld   hl,$F44C
F6D2: ld   (hl),c
F6D3: ld   hl,($F447)
F6D6: ld   a,l
F6D7: and  $70
F6D9: ld   l,a
F6DA: ld   a,c
F6DB: rla
F6DC: sbc  a,a
F6DD: ld   b,a
F6DE: add  hl,bc
F6DF: ld   c,l
F6E0: ld   b,h
F6E1: ld   ($F447),bc
F6E5: ld   sp,ix
F6E7: pop  ix
F6E9: ret
CF12: ld   hl,$F438
CF15: call $D03A
D03A: ret
CF18: ld   hl,$F447
CF1B: call $D03A
D03A: ret
CF1E: ld   hl,$F462
CF21: call $D03A

   (loops for 1 instructions)

CF24: pop  de
CF25: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF99: jr   $CF9E
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CE8E: ld   hl,$601C
CE91: set  2,(hl)
CE93: ld   hl,$601D
CE96: set  2,(hl)
CE98: ld   a,(de)
CE99: inc  de
CE9A: ld   ($6013),a
CE9D: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CEA0: ld   ($6F2F),a
CEA3: push de
CEA4: call $D02E
D02E: ret
CEA7: pop  de
CEA8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CEAE: ld   a,(de)
CEAF: inc  de
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 10 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 11 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE52: ld   hl,$B25E
CE55: ld   ($6FB3),hl
CE58: ld   hl,$B299
CE5B: ld   ($6FB5),hl
CE5E: ld   hl,$B2F9
CE61: ld   ($6FB7),hl
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 27 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 8 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 8 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CD78: cp   $86
CD7A: jp   z,$CFD6
CFD6: ld   hl,$CCE5
CFD9: dec  (hl)
CFDA: jp   nz,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CEAE: ld   a,(de)
CEAF: inc  de
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 4 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A

   (loops for 5 instructions)

D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CEEB: push de
CEEC: call $D036
D036: ret
CEEF: pop  de
CEF0: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CF0E: push de
CF0F: call $F535
F535: push ix
F537: ld   ix,$0000
F53B: add  ix,sp
F53D: ld   hl,$FFF3
F540: add  hl,sp
F541: ld   sp,hl
F542: ld   hl,$6450
F545: ld   c,(hl)
F546: inc  hl
F547: ld   b,(hl)
F548: push bc
F549: ld   hl,$F6EA
F54C: push hl
F54D: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 518 instructions)

D918: inc  (ix-$01)

   (loops for 118 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D969: ld   c,(ix-$04)
D96C: ld   b,(ix-$03)
D96F: ld   d,h
D970: push de
D971: ld   e,l
D972: ld   a,(de)
D973: ld   hl,$FDF2
D976: ld   (hl),a
D977: inc  de
D978: ld   a,(de)
D979: inc  hl
D97A: ld   (hl),a
D97B: pop  de
D97C: jr   $D9A8

   (loops for 2 instructions)

D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F550: pop  af
F551: pop  af
F552: ld   (ix-$02),$4D
F556: ld   (ix-$01),$F4
F55A: ld   a,$01
F55C: push af
F55D: inc  sp
F55E: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F561: inc  sp
F562: ld   c,l
F563: ld   a,c
F564: rla
F565: sbc  a,a
F566: ld   b,a
F567: inc  bc
F568: inc  bc
F569: ld   (ix-$09),c
F56C: ld   (ix-$08),b
F56F: ld   a,(ix-$09)
F572: add  a,$FF
F574: ld   (ix-$04),a
F577: ld   a,(ix-$08)
F57A: adc  a,$FF
F57C: ld   (ix-$03),a
F57F: ld   (ix-$0b),$00
F583: ld   (ix-$0a),$00
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 23 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 44 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 19 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 6 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F61F: ld   a,$0A
F621: push af
F622: inc  sp
F623: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 24 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F626: inc  sp
F627: ld   a,l
F628: xor  $80
F62A: sub  $84
F62C: jr   nc,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 48 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 30 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F66C: ld   c,(ix-$02)
F66F: ld   b,(ix-$01)
F672: dec  bc
F673: ld   a,(bc)
F674: ld   d,a
F675: inc  bc
F676: push bc
F677: push de
F678: inc  sp
F679: call $F501
F501: push ix
F503: ld   ix,$0000
F507: add  ix,sp
F509: ld   a,(ix+$04)
F50C: sub  $41
F50E: jr   z,$F52C
F510: ld   a,(ix+$04)
F513: sub  $45
F515: jr   z,$F52C
F517: ld   a,(ix+$04)
F51A: sub  $49
F51C: jr   z,$F52C
F51E: ld   a,(ix+$04)
F521: sub  $4F
F523: jr   z,$F52C
F52C: ld   l,$01
F52E: jr   $F532
F532: pop  ix
F534: ret
F67C: inc  sp
F67D: ld   a,l
F67E: pop  bc
F67F: or   a
F680: jr   nz,$F686
F686: push bc
F687: ld   a,$03
F689: push af
F68A: inc  sp
F68B: ld   hl,$F474
F68E: push hl
F68F: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F692: pop  af
F693: inc  sp
F694: ld   a,l
F695: pop  bc
F696: ld   (bc),a
F697: inc  bc
F698: push bc
F699: ld   a,$04
F69B: push af
F69C: inc  sp
F69D: ld   hl,$F477
F6A0: push hl
F6A1: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F6A4: pop  af
F6A5: inc  sp
F6A6: ld   a,l
F6A7: pop  bc
F6A8: ld   (bc),a
F6A9: inc  bc
F6AA: xor  a
F6AB: ld   (bc),a
F6AC: push bc
F6AD: ld   hl,$F44D
F6B0: push hl
F6B1: ld   hl,$F706
F6B4: push hl
F6B5: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 312 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D95D: sub  $73
D95F: jr   z,$D98B
D98B: ld   c,(ix-$04)
D98E: ld   b,(ix-$03)
D991: ld   d,(hl)
D992: inc  hl
D993: ld   h,(hl)
D994: push bc
D995: push de
D996: ld   l,d
D997: push hl
D998: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC

   (loops for 37 instructions)

D8E8: pop  ix
D8EA: ret
D99B: pop  af
D99C: pop  de
D99D: pop  bc
D99E: jr   $D9A8
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)

   (loops for 13 instructions)

D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F6B8: pop  af
F6B9: pop  af
F6BA: pop  bc
F6BB: ld   a,c
F6BC: sub  $4D
F6BE: ld   c,a
F6BF: ld   a,b
F6C0: sbc  a,$F4
F6C2: ld   a,c
F6C3: rla
F6C4: sbc  a,a
F6C5: ld   b,a
F6C6: inc  bc
F6C7: sra  b
F6C9: rr   c
F6CB: ld   a,$0B
F6CD: sub  c
F6CE: ld   c,a
F6CF: ld   hl,$F44C
F6D2: ld   (hl),c
F6D3: ld   hl,($F447)
F6D6: ld   a,l
F6D7: and  $70
F6D9: ld   l,a
F6DA: ld   a,c
F6DB: rla
F6DC: sbc  a,a
F6DD: ld   b,a
F6DE: add  hl,bc
F6DF: ld   c,l
F6E0: ld   b,h
F6E1: ld   ($F447),bc
F6E5: ld   sp,ix
F6E7: pop  ix
F6E9: ret
CF12: ld   hl,$F438
CF15: call $D03A
D03A: ret
CF18: ld   hl,$F447
CF1B: call $D03A
D03A: ret
CF1E: ld   hl,$F462
CF21: call $D03A

   (loops for 1 instructions)

CF24: pop  de
CF25: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 13 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF99: jr   $CF9E
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CE8E: ld   hl,$601C
CE91: set  2,(hl)
CE93: ld   hl,$601D
CE96: set  2,(hl)
CE98: ld   a,(de)
CE99: inc  de
CE9A: ld   ($6013),a
CE9D: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CEA0: ld   ($6F2F),a
CEA3: push de
CEA4: call $D02E
D02E: ret
CEA7: pop  de
CEA8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD83: ld   hl,$6024
CD86: inc  (hl)
CD87: ld   de,$F85B
CD8A: jr   $CD10

   (loops for 4 instructions)

CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF50: inc  de
CF51: inc  de
CF52: pop  hl
CF53: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A

   (loops for 5 instructions)

D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CEEB: push de
CEEC: call $D036
D036: ret
CEEF: pop  de
CEF0: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF50: inc  de
CF51: inc  de
CF52: pop  hl
CF53: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CF0E: push de
CF0F: call $F535
F535: push ix
F537: ld   ix,$0000
F53B: add  ix,sp
F53D: ld   hl,$FFF3
F540: add  hl,sp
F541: ld   sp,hl
F542: ld   hl,$6450
F545: ld   c,(hl)
F546: inc  hl
F547: ld   b,(hl)
F548: push bc
F549: ld   hl,$F6EA
F54C: push hl
F54D: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 518 instructions)

D918: inc  (ix-$01)

   (loops for 118 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D969: ld   c,(ix-$04)
D96C: ld   b,(ix-$03)
D96F: ld   d,h
D970: push de
D971: ld   e,l
D972: ld   a,(de)
D973: ld   hl,$FDF2
D976: ld   (hl),a
D977: inc  de
D978: ld   a,(de)
D979: inc  hl
D97A: ld   (hl),a
D97B: pop  de
D97C: jr   $D9A8

   (loops for 2 instructions)

D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F550: pop  af
F551: pop  af
F552: ld   (ix-$02),$4D
F556: ld   (ix-$01),$F4
F55A: ld   a,$01
F55C: push af
F55D: inc  sp
F55E: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 34 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F561: inc  sp
F562: ld   c,l
F563: ld   a,c
F564: rla
F565: sbc  a,a
F566: ld   b,a
F567: inc  bc
F568: inc  bc
F569: ld   (ix-$09),c
F56C: ld   (ix-$08),b
F56F: ld   a,(ix-$09)
F572: add  a,$FF
F574: ld   (ix-$04),a
F577: ld   a,(ix-$08)
F57A: adc  a,$FF
F57C: ld   (ix-$03),a
F57F: ld   (ix-$0b),$00
F583: ld   (ix-$0a),$00
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 13 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 46 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F491: inc  l
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F497: inc  l
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49D: inc  l
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A3: inc  l
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4A9: inc  l
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4AF: inc  l
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B5: inc  l
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F4BA: inc  l
F4BB: ret
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F61F: ld   a,$0A
F621: push af
F622: inc  sp
F623: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F626: inc  sp
F627: ld   a,l
F628: xor  $80
F62A: sub  $84
F62C: jr   nc,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 48 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F491: inc  l
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F497: inc  l
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49D: inc  l
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F66C: ld   c,(ix-$02)
F66F: ld   b,(ix-$01)
F672: dec  bc
F673: ld   a,(bc)
F674: ld   d,a
F675: inc  bc
F676: push bc
F677: push de
F678: inc  sp
F679: call $F501
F501: push ix
F503: ld   ix,$0000
F507: add  ix,sp
F509: ld   a,(ix+$04)
F50C: sub  $41
F50E: jr   z,$F52C
F52C: ld   l,$01
F52E: jr   $F532
F532: pop  ix
F534: ret
F67C: inc  sp
F67D: ld   a,l
F67E: pop  bc
F67F: or   a
F680: jr   nz,$F686
F686: push bc
F687: ld   a,$03
F689: push af
F68A: inc  sp
F68B: ld   hl,$F474
F68E: push hl
F68F: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F692: pop  af
F693: inc  sp
F694: ld   a,l
F695: pop  bc
F696: ld   (bc),a
F697: inc  bc
F698: push bc
F699: ld   a,$04
F69B: push af
F69C: inc  sp
F69D: ld   hl,$F477
F6A0: push hl
F6A1: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F6A4: pop  af
F6A5: inc  sp
F6A6: ld   a,l
F6A7: pop  bc
F6A8: ld   (bc),a
F6A9: inc  bc
F6AA: xor  a
F6AB: ld   (bc),a
F6AC: push bc
F6AD: ld   hl,$F44D
F6B0: push hl
F6B1: ld   hl,$F706
F6B4: push hl
F6B5: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 312 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D95D: sub  $73
D95F: jr   z,$D98B
D98B: ld   c,(ix-$04)
D98E: ld   b,(ix-$03)
D991: ld   d,(hl)
D992: inc  hl
D993: ld   h,(hl)
D994: push bc
D995: push de
D996: ld   l,d
D997: push hl
D998: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC

   (loops for 37 instructions)

D8E8: pop  ix
D8EA: ret
D99B: pop  af
D99C: pop  de
D99D: pop  bc
D99E: jr   $D9A8
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)

   (loops for 13 instructions)

D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F6B8: pop  af
F6B9: pop  af
F6BA: pop  bc
F6BB: ld   a,c
F6BC: sub  $4D
F6BE: ld   c,a
F6BF: ld   a,b
F6C0: sbc  a,$F4
F6C2: ld   a,c
F6C3: rla
F6C4: sbc  a,a
F6C5: ld   b,a
F6C6: inc  bc
F6C7: sra  b
F6C9: rr   c
F6CB: ld   a,$0B
F6CD: sub  c
F6CE: ld   c,a
F6CF: ld   hl,$F44C
F6D2: ld   (hl),c
F6D3: ld   hl,($F447)
F6D6: ld   a,l
F6D7: and  $70
F6D9: ld   l,a
F6DA: ld   a,c
F6DB: rla
F6DC: sbc  a,a
F6DD: ld   b,a
F6DE: add  hl,bc
F6DF: ld   c,l
F6E0: ld   b,h
F6E1: ld   ($F447),bc
F6E5: ld   sp,ix
F6E7: pop  ix
F6E9: ret
CF12: ld   hl,$F438
CF15: call $D03A
D03A: ret
CF18: ld   hl,$F447
CF1B: call $D03A
D03A: ret
CF1E: ld   hl,$F462
CF21: call $D03A

   (loops for 1 instructions)

CF24: pop  de
CF25: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
D021: and  $07
D023: or   $40
D025: ret
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF99: jr   $CF9E
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CE8E: ld   hl,$601C
CE91: set  2,(hl)
CE93: ld   hl,$601D
CE96: set  2,(hl)
CE98: ld   a,(de)
CE99: inc  de
CE9A: ld   ($6013),a
CE9D: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CEA0: ld   ($6F2F),a
CEA3: push de
CEA4: call $D02E
D02E: ret
CEA7: pop  de
CEA8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 25 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 25 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CF5F: ld   a,(de)
CF60: inc  de
CF61: ld   ($601D),a
CF64: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CEAB: xor  a
CEAC: jr   $CEB0
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 9 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CF5F: ld   a,(de)
CF60: inc  de
CF61: ld   ($601D),a
CF64: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CF5F: ld   a,(de)
CF60: inc  de
CF61: ld   ($601D),a
CF64: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CD78: cp   $86
CD7A: jp   z,$CFD6
CFD6: ld   hl,$CCE5
CFD9: dec  (hl)
CFDA: jp   nz,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 24 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 6 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 11 instructions)

8B95: add  hl,de

   (loops for 4 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 11 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CD78: cp   $86
CD7A: jp   z,$CFD6
CFD6: ld   hl,$CCE5
CFD9: dec  (hl)
CFDA: jp   nz,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CEAE: ld   a,(de)
CEAF: inc  de
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 8 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A

   (loops for 5 instructions)

D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CEEB: push de
CEEC: call $D036
D036: ret
CEEF: pop  de
CEF0: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF50: inc  de
CF51: inc  de
CF52: pop  hl
CF53: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CF0E: push de
CF0F: call $F535
F535: push ix
F537: ld   ix,$0000
F53B: add  ix,sp
F53D: ld   hl,$FFF3
F540: add  hl,sp
F541: ld   sp,hl
F542: ld   hl,$6450
F545: ld   c,(hl)
F546: inc  hl
F547: ld   b,(hl)
F548: push bc
F549: ld   hl,$F6EA
F54C: push hl
F54D: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 518 instructions)

D918: inc  (ix-$01)

   (loops for 118 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D969: ld   c,(ix-$04)
D96C: ld   b,(ix-$03)
D96F: ld   d,h
D970: push de
D971: ld   e,l
D972: ld   a,(de)
D973: ld   hl,$FDF2
D976: ld   (hl),a
D977: inc  de
D978: ld   a,(de)
D979: inc  hl
D97A: ld   (hl),a
D97B: pop  de
D97C: jr   $D9A8

   (loops for 2 instructions)

D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F550: pop  af
F551: pop  af
F552: ld   (ix-$02),$4D
F556: ld   (ix-$01),$F4
F55A: ld   a,$01
F55C: push af
F55D: inc  sp
F55E: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F561: inc  sp
F562: ld   c,l
F563: ld   a,c
F564: rla
F565: sbc  a,a
F566: ld   b,a
F567: inc  bc
F568: inc  bc
F569: ld   (ix-$09),c
F56C: ld   (ix-$08),b
F56F: ld   a,(ix-$09)
F572: add  a,$FF
F574: ld   (ix-$04),a
F577: ld   a,(ix-$08)
F57A: adc  a,$FF
F57C: ld   (ix-$03),a
F57F: ld   (ix-$0b),$00
F583: ld   (ix-$0a),$00
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 42 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 18 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F61F: ld   a,$0A
F621: push af
F622: inc  sp
F623: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 19 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F626: inc  sp
F627: ld   a,l
F628: xor  $80
F62A: sub  $84
F62C: jr   nc,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 48 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 13 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F491: inc  l
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F497: inc  l
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49D: inc  l
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A3: inc  l
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4A9: inc  l
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 19 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F66C: ld   c,(ix-$02)
F66F: ld   b,(ix-$01)
F672: dec  bc
F673: ld   a,(bc)
F674: ld   d,a
F675: inc  bc
F676: push bc
F677: push de
F678: inc  sp
F679: call $F501
F501: push ix
F503: ld   ix,$0000
F507: add  ix,sp
F509: ld   a,(ix+$04)
F50C: sub  $41
F50E: jr   z,$F52C
F52C: ld   l,$01
F52E: jr   $F532
F532: pop  ix
F534: ret
F67C: inc  sp
F67D: ld   a,l
F67E: pop  bc
F67F: or   a
F680: jr   nz,$F686
F686: push bc
F687: ld   a,$03
F689: push af
F68A: inc  sp
F68B: ld   hl,$F474
F68E: push hl
F68F: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 24 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F692: pop  af
F693: inc  sp
F694: ld   a,l
F695: pop  bc
F696: ld   (bc),a
F697: inc  bc
F698: push bc
F699: ld   a,$04
F69B: push af
F69C: inc  sp
F69D: ld   hl,$F477
F6A0: push hl
F6A1: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F6A4: pop  af
F6A5: inc  sp
F6A6: ld   a,l
F6A7: pop  bc
F6A8: ld   (bc),a
F6A9: inc  bc
F6AA: xor  a
F6AB: ld   (bc),a
F6AC: push bc
F6AD: ld   hl,$F44D
F6B0: push hl
F6B1: ld   hl,$F706
F6B4: push hl
F6B5: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 312 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D95D: sub  $73
D95F: jr   z,$D98B
D98B: ld   c,(ix-$04)
D98E: ld   b,(ix-$03)
D991: ld   d,(hl)
D992: inc  hl
D993: ld   h,(hl)
D994: push bc
D995: push de
D996: ld   l,d
D997: push hl
D998: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC

   (loops for 37 instructions)

D8E8: pop  ix
D8EA: ret
D99B: pop  af
D99C: pop  de
D99D: pop  bc
D99E: jr   $D9A8
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)

   (loops for 13 instructions)

D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F6B8: pop  af
F6B9: pop  af
F6BA: pop  bc
F6BB: ld   a,c
F6BC: sub  $4D
F6BE: ld   c,a
F6BF: ld   a,b
F6C0: sbc  a,$F4
F6C2: ld   a,c
F6C3: rla
F6C4: sbc  a,a
F6C5: ld   b,a
F6C6: inc  bc
F6C7: sra  b
F6C9: rr   c
F6CB: ld   a,$0B
F6CD: sub  c
F6CE: ld   c,a
F6CF: ld   hl,$F44C
F6D2: ld   (hl),c
F6D3: ld   hl,($F447)
F6D6: ld   a,l
F6D7: and  $70
F6D9: ld   l,a
F6DA: ld   a,c
F6DB: rla
F6DC: sbc  a,a
F6DD: ld   b,a
F6DE: add  hl,bc
F6DF: ld   c,l
F6E0: ld   b,h
F6E1: ld   ($F447),bc
F6E5: ld   sp,ix
F6E7: pop  ix
F6E9: ret
CF12: ld   hl,$F438
CF15: call $D03A
D03A: ret
CF18: ld   hl,$F447
CF1B: call $D03A
D03A: ret
CF1E: ld   hl,$F462
CF21: call $D03A

   (loops for 1 instructions)

CF24: pop  de
CF25: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF99: jr   $CF9E
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 16 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CE8E: ld   hl,$601C
CE91: set  2,(hl)
CE93: ld   hl,$601D
CE96: set  2,(hl)
CE98: ld   a,(de)
CE99: inc  de
CE9A: ld   ($6013),a
CE9D: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CEA0: ld   ($6F2F),a
CEA3: push de
CEA4: call $D02E
D02E: ret
CEA7: pop  de
CEA8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CEAE: ld   a,(de)
CEAF: inc  de
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 10 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 19 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 11 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE52: ld   hl,$B25E
CE55: ld   ($6FB3),hl
CE58: ld   hl,$B299
CE5B: ld   ($6FB5),hl
CE5E: ld   hl,$B2F9
CE61: ld   ($6FB7),hl
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 34 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 8 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD9A: ld   hl,$601C
CD9D: set  0,(hl)
CD9F: ld   hl,$601D
CDA2: set  0,(hl)
CDA4: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D00E: exx
D00F: inc  a
D010: ld   e,a
D011: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D014: ld   d,a
D015: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 13 instructions)

8C27: ret
D018: exx
D019: add  a,c
D01A: ret
CDA7: ld   ($80F8),a
CDAA: ld   a,(de)
CDAB: inc  de
CDAC: ld   ($6186),a
CDAF: ld   a,(de)
CDB0: inc  de
CDB1: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDB4: ld   ($647D),hl
CDB7: ld   a,(de)
CDB8: inc  de
CDB9: call $CE05
CE05: ld   hl,$CE13
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CDBC: ld   ($647F),hl
CDBF: ld   a,(de)
CDC0: inc  de
CDC1: ld   ($6185),a
CDC4: ld   a,(de)
CDC5: ld   ($6184),a
CDC8: inc  de
CDC9: ld   a,(de)
CDCA: inc  de
CDCB: ld   ($6187),a
CDCE: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CDD1: ld   ($618A),a
CDD4: ld   a,(de)
CDD5: inc  de
CDD6: ld   ($63B2),a
CDD9: or   a
CDDA: jr   z,$CDFD
CDDC: ld   a,(de)
CDDD: rlca
CDDE: rlca
CDDF: rlca
CDE0: and  $03
CDE2: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CDE5: ld   a,(de)
CDE6: and  $1F
CDE8: inc  de
CDE9: push de
CDEA: ld   e,$05
CDEC: ld   h,a
CDED: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 8 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 1 instructions)

8B98: ret
CDF0: ld   de,$6350
CDF3: add  hl,de
CDF4: ld   ($634E),hl
CDF7: pop  de
CDF8: ld   a,(de)
CDF9: inc  de
CDFA: ld   ($63B3),a
CDFD: push de
CDFE: call $D026
D026: ret
CE01: pop  de
CE02: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CD73: cp   $87
CD75: jp   z,$CFCF
CD78: cp   $86
CD7A: jp   z,$CFD6
CFD6: ld   hl,$CCE5
CFD9: dec  (hl)
CFDA: jp   nz,$CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CEAE: ld   a,(de)
CEAF: inc  de
CEB0: ld   ($63B3),a
CEB3: ld   hl,$601C
CEB6: set  3,(hl)
CEB8: ld   hl,$601D
CEBB: set  3,(hl)
CEBD: ex   de,hl
CEBE: ld   de,$6178
CEC1: ld   bc,$0009
CEC4: ldir
CEC4: ldir

   (loops for 7 instructions)

CEC6: ex   de,hl
CEC7: ld   a,(de)
CEC8: and  $1F
CECA: push de
CECB: ld   e,$05
CECD: ld   h,a
CECE: call $8B99
8B99: ld   a,e
8B9A: xor  h
8B9B: push af
8B9C: ld   a,e
8B9D: or   a
8B9E: jp   p,$8BA4
8BA4: ld   a,h
8BA5: or   a
8BA6: jp   p,$8BAC
8BAC: pop  af
8BAD: or   a
8BAE: jp   p,$8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 4 instructions)

8B98: ret
CED1: ld   de,$6350
CED4: add  hl,de
CED5: ld   ($634E),hl
CED8: pop  de
CED9: ld   a,(de)
CEDA: rlca
CEDB: rlca
CEDC: rlca
CEDD: and  $07
CEDF: inc  de
CEE0: call $CE1A
CE1A: push de
CE1B: ld   hl,$CE27
CE1E: call $CE08
CE08: add  a,a
CE09: add  a,l
CE0A: ld   l,a
CE0B: jr   nc,$CE0E
CE0E: ld   a,(hl)
CE0F: inc  hl
CE10: ld   h,(hl)
CE11: ld   l,a
CE12: ret
CE21: ex   de,hl
CE22: call $84BB
84BB: ld   hl,($634A)
84BE: or   a
84BF: sbc  hl,de
84C1: ret  z
84C2: push de
84C3: call $849F
849F: ld   hl,$6350
84A2: xor  a
84A3: cp   (hl)
84A4: jp   z,$846B
846B: ld   hl,$6350
846E: ld   ($634C),hl
8471: ld   de,$0005
8474: ld   b,$0F
8476: xor  a
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477
8477: ld   (hl),a
8478: add  hl,de
8479: djnz $8477

   (loops for 39 instructions)

847B: ld   ($639B),a
847E: ret
84C6: pop  hl
84C7: ld   ($634A),hl
84CA: ret
CE25: pop  de
CE26: ret
CEE3: push de
CEE4: call $D032
D032: nop
D033: jp   $D664
D664: ld   a,($617B)
D667: ld   ($6183),a
D66A: xor  a
D66B: ld   ($6182),a
D66E: ret
CEE7: pop  de
CEE8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A

   (loops for 5 instructions)

D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CEEB: push de
CEEC: call $D036
D036: ret
CEEF: pop  de
CEF0: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CF28: ld   a,(de)
CF29: inc  de
CF2A: ld   ($6028),a
CF2D: ld   a,(de)
CF2E: inc  de
CF2F: ld   ($6027),a
CF32: push de
CF33: call $D6ED
D6ED: ld   a,($6027)
D6F0: ld   c,a
D6F1: and  $38
D6F3: ld   hl,$6028
D6F6: or   (hl)
D6F7: ld   hl,$5816
D6FA: ld   de,$0017
D6FD: exx
D6FE: ld   b,$18
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705
D705: ld   (hl),a
D706: inc  hl
D707: djnz $D705

   (loops for 18 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700
D700: exx
D701: ld   (hl),c
D702: inc  hl
D703: ld   b,$08

   (loops for 24 instructions)

D709: ld   (hl),c
D70A: add  hl,de
D70B: exx
D70C: djnz $D700

   (loops for 704 instructions)

D70E: exx
D70F: ld   hl,$5878
D712: ld   de,$0020
D715: ld   a,$60
D717: ld   b,$05
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719
D719: ld   (hl),a
D71A: add  hl,de
D71B: djnz $D719

   (loops for 9 instructions)

D71D: ld   a,$70
D71F: ld   b,$08
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721
D721: ld   (hl),a
D722: add  hl,de
D723: djnz $D721

   (loops for 18 instructions)

D725: ld   a,$50
D727: ld   b,$05
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729
D729: ld   (hl),a
D72A: add  hl,de
D72B: djnz $D729

   (loops for 9 instructions)

D72D: ret
CF36: pop  de
CF37: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CF0E: push de
CF0F: call $F535
F535: push ix
F537: ld   ix,$0000
F53B: add  ix,sp
F53D: ld   hl,$FFF3
F540: add  hl,sp
F541: ld   sp,hl
F542: ld   hl,$6450
F545: ld   c,(hl)
F546: inc  hl
F547: ld   b,(hl)
F548: push bc
F549: ld   hl,$F6EA
F54C: push hl
F54D: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 518 instructions)

D918: inc  (ix-$01)

   (loops for 118 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D969: ld   c,(ix-$04)
D96C: ld   b,(ix-$03)
D96F: ld   d,h
D970: push de
D971: ld   e,l
D972: ld   a,(de)
D973: ld   hl,$FDF2
D976: ld   (hl),a
D977: inc  de
D978: ld   a,(de)
D979: inc  hl
D97A: ld   (hl),a
D97B: pop  de
D97C: jr   $D9A8

   (loops for 2 instructions)

D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F550: pop  af
F551: pop  af
F552: ld   (ix-$02),$4D
F556: ld   (ix-$01),$F4
F55A: ld   a,$01
F55C: push af
F55D: inc  sp
F55E: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 26 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F561: inc  sp
F562: ld   c,l
F563: ld   a,c
F564: rla
F565: sbc  a,a
F566: ld   b,a
F567: inc  bc
F568: inc  bc
F569: ld   (ix-$09),c
F56C: ld   (ix-$08),b
F56F: ld   a,(ix-$09)
F572: add  a,$FF
F574: ld   (ix-$04),a
F577: ld   a,(ix-$08)
F57A: adc  a,$FF
F57C: ld   (ix-$03),a
F57F: ld   (ix-$0b),$00
F583: ld   (ix-$0a),$00
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 23 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 44 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 16 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F5F2: ld   a,(ix-$0c)
F5F5: or   a
F5F6: jr   nz,$F60B
F5F8: call $F4BC
F4BC: ld   a,$16
F4BE: push af
F4BF: inc  sp
F4C0: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 19 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 5 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 8 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4C3: inc  sp
F4C4: ld   a,l
F4C5: add  a,$41
F4C7: ld   l,a
F4C8: sub  $46
F4CA: jr   c,$F4CD
F4CD: ld   a,l
F4CE: sub  $51
F4D0: jr   c,$F4D3
F4D3: ld   a,l
F4D4: sub  $58
F4D6: jr   c,$F4D9
F4D9: ld   a,l
F4DA: sub  $59
F4DC: ret  c
F5FB: ld   c,l
F5FC: ld   l,(ix-$02)
F5FF: ld   h,(ix-$01)
F602: ld   (hl),c
F603: inc  (ix-$02)
F606: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F61F: ld   a,$0A
F621: push af
F622: inc  sp
F623: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F626: inc  sp
F627: ld   a,l
F628: xor  $80
F62A: sub  $84
F62C: jr   nc,$F660
F62E: ld   a,$02
F630: push af
F631: inc  sp
F632: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 46 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F635: inc  sp
F636: ld   c,l
F637: ld   e,(ix-$02)
F63A: ld   d,(ix-$01)
F63D: inc  de
F63E: ld   a,c
F63F: or   a
F640: jr   nz,$F652
F642: ld   l,(ix-$02)
F645: ld   h,(ix-$01)
F648: ld   (hl),$27
F64A: ld   (ix-$02),e
F64D: ld   (ix-$01),d
F650: jr   $F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F59B: ld   a,$02
F59D: push af
F59E: inc  sp
F59F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 26 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F5A2: inc  sp
F5A3: ld   (ix-$05),l
F5A6: ld   (ix-$07),l
F5A9: ld   a,(ix-$05)
F5AC: rla
F5AD: sbc  a,a
F5AE: ld   (ix-$06),a
F5B1: ld   a,(ix-$07)
F5B4: add  a,$02
F5B6: ld   (ix-$0d),a
F5B9: ld   a,(ix-$06)
F5BC: adc  a,$00
F5BE: ld   (ix-$0c),a
F5C1: call $F47B
F47B: ld   a,$11
F47D: push af
F47E: inc  sp
F47F: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08

   (loops for 46 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F482: inc  sp
F483: ld   a,l
F484: add  a,$41
F486: ld   l,a
F487: sub  $41
F489: jr   c,$F48C
F48B: inc  l
F48C: ld   a,l
F48D: sub  $45
F48F: jr   c,$F492
F491: inc  l
F492: ld   a,l
F493: sub  $46
F495: jr   c,$F498
F497: inc  l
F498: ld   a,l
F499: sub  $49
F49B: jr   c,$F49E
F49D: inc  l
F49E: ld   a,l
F49F: sub  $4F
F4A1: jr   c,$F4A4
F4A4: ld   a,l
F4A5: sub  $51
F4A7: jr   c,$F4AA
F4AA: ld   a,l
F4AB: sub  $55
F4AD: jr   c,$F4B0
F4B0: ld   a,l
F4B1: sub  $58
F4B3: jr   c,$F4B6
F4B6: ld   a,l
F4B7: sub  $59
F4B9: ret  c
F5C4: ld   c,l
F5C5: ld   l,(ix-$02)
F5C8: ld   h,(ix-$01)
F5CB: ld   (hl),c
F5CC: ld   c,(ix-$02)
F5CF: ld   b,(ix-$01)
F5D2: inc  bc
F5D3: push bc
F5D4: ld   a,$05
F5D6: push af
F5D7: inc  sp
F5D8: ld   hl,$F46F
F5DB: push hl
F5DC: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 4 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 25 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F5DF: pop  af
F5E0: inc  sp
F5E1: ld   a,l
F5E2: pop  bc
F5E3: ld   (bc),a
F5E4: inc  bc
F5E5: ld   (ix-$02),c
F5E8: ld   (ix-$01),b
F5EB: ld   a,(ix-$0d)
F5EE: sub  $03
F5F0: jr   nz,$F60B
F60B: ld   a,(ix-$0b)
F60E: sub  (ix-$04)
F611: ld   a,(ix-$0a)
F614: sbc  a,(ix-$03)
F617: jp   po,$F61C
F61C: jp   p,$F660
F660: inc  (ix-$0b)
F663: jp   nz,$F587
F587: ld   a,(ix-$0b)
F58A: sub  (ix-$09)
F58D: ld   a,(ix-$0a)
F590: sbc  a,(ix-$08)
F593: jp   po,$F598
F598: jp   p,$F66C
F66C: ld   c,(ix-$02)
F66F: ld   b,(ix-$01)
F672: dec  bc
F673: ld   a,(bc)
F674: ld   d,a
F675: inc  bc
F676: push bc
F677: push de
F678: inc  sp
F679: call $F501
F501: push ix
F503: ld   ix,$0000
F507: add  ix,sp
F509: ld   a,(ix+$04)
F50C: sub  $41
F50E: jr   z,$F52C
F510: ld   a,(ix+$04)
F513: sub  $45
F515: jr   z,$F52C
F517: ld   a,(ix+$04)
F51A: sub  $49
F51C: jr   z,$F52C
F51E: ld   a,(ix+$04)
F521: sub  $4F
F523: jr   z,$F52C
F52C: ld   l,$01
F52E: jr   $F532
F532: pop  ix
F534: ret
F67C: inc  sp
F67D: ld   a,l
F67E: pop  bc
F67F: or   a
F680: jr   nz,$F686
F686: push bc
F687: ld   a,$03
F689: push af
F68A: inc  sp
F68B: ld   hl,$F474
F68E: push hl
F68F: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C23: sub  e
8C24: inc  d
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 20 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F692: pop  af
F693: inc  sp
F694: ld   a,l
F695: pop  bc
F696: ld   (bc),a
F697: inc  bc
F698: push bc
F699: ld   a,$04
F69B: push af
F69C: inc  sp
F69D: ld   hl,$F477
F6A0: push hl
F6A1: call $F4DF
F4DF: push ix
F4E1: ld   ix,$0000
F4E5: add  ix,sp
F4E7: ld   a,(ix+$06)
F4EA: push af
F4EB: inc  sp
F4EC: call $F420
F420: push de
F421: ld   de,($6450)
F425: call $774E
774E: ld   a,d
774F: ld   h,e
7750: ld   l,$FD
7752: or   a
7753: sbc  hl,de
7755: sbc  a,$00
7757: sbc  hl,de
7759: ld   d,$00
775B: sbc  a,d
775C: ld   e,a
775D: sbc  hl,de
775F: jr   nc,$7762
7762: ret
F428: ld   ($6450),hl
F42B: pop  de
F42C: ld   a,l
F42D: ld   hl,$0002
F430: add  hl,sp
F431: ld   e,(hl)
F432: ld   d,a
F433: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 14 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 15 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 1 instructions)

8C27: ret
F436: ld   l,a
F437: ret
F4EF: inc  sp
F4F0: ld   c,l
F4F1: ld   a,(ix+$04)
F4F4: add  a,c
F4F5: ld   c,a
F4F6: ld   a,(ix+$05)
F4F9: adc  a,$00
F4FB: ld   b,a
F4FC: ld   a,(bc)
F4FD: ld   l,a
F4FE: pop  ix
F500: ret
F6A4: pop  af
F6A5: inc  sp
F6A6: ld   a,l
F6A7: pop  bc
F6A8: ld   (bc),a
F6A9: inc  bc
F6AA: xor  a
F6AB: ld   (bc),a
F6AC: push bc
F6AD: ld   hl,$F44D
F6B0: push hl
F6B1: ld   hl,$F706
F6B4: push hl
F6B5: call $D8EB
D8EB: push ix
D8ED: ld   ix,$0000
D8F1: add  ix,sp
D8F3: push af
D8F4: push af
D8F5: dec  sp
D8F6: ld   (ix-$05),$00
D8FA: ld   hl,$000B
D8FD: add  hl,sp
D8FE: ld   c,l
D8FF: ld   b,h
D900: ld   a,(ix+$04)
D903: ld   (ix-$02),a
D906: ld   a,(ix+$05)
D909: ld   (ix-$01),a
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D92D: sub  $25
D92F: jr   nz,$D935
D935: xor  a
D936: ld   d,a
D937: ld   a,(ix-$05)
D93A: sub  $25
D93C: jr   nz,$D9A0
D9A0: ld   a,d
D9A1: or   a
D9A2: jr   nz,$D9A8
D9A4: ld   hl,$FDF0
D9A7: ld   (hl),e
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C

   (loops for 312 instructions)

D931: ld   a,$01
D933: jr   $D936

   (loops for 29 instructions)

D93E: or   d
D93F: jr   nz,$D963
D941: ld   a,e
D942: sub  $62
D944: jr   z,$D97E
D946: ld   hl,$0002
D949: add  hl,bc
D94A: ld   (ix-$04),l
D94D: ld   (ix-$03),h
D950: ld   l,(ix-$04)
D953: ld   h,(ix-$03)
D956: dec  hl
D957: dec  hl
D958: ld   a,e
D959: cp   $64
D95B: jr   z,$D969
D95D: sub  $73
D95F: jr   z,$D98B
D98B: ld   c,(ix-$04)
D98E: ld   b,(ix-$03)
D991: ld   d,(hl)
D992: inc  hl
D993: ld   h,(hl)
D994: push bc
D995: push de
D996: ld   l,d
D997: push hl
D998: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC
D8DC: ld   a,(bc)
D8DD: inc  bc
D8DE: ld   e,a
D8DF: or   a
D8E0: jr   z,$D8E8
D8E2: ld   hl,$FDF0
D8E5: ld   (hl),e
D8E6: jr   $D8DC

   (loops for 53 instructions)

D8E8: pop  ix
D8EA: ret
D99B: pop  af
D99C: pop  de
D99D: pop  bc
D99E: jr   $D9A8
D9A8: ld   (ix-$05),e
D9AB: jp   $D90C
D90C: ld   l,(ix-$02)
D90F: ld   h,(ix-$01)
D912: ld   d,(hl)
D913: inc  (ix-$02)
D916: jr   nz,$D91B
D91B: ld   a,(ix-$02)
D91E: ld   (ix+$04),a
D921: ld   a,(ix-$01)
D924: ld   (ix+$05),a
D927: ld   a,d
D928: ld   e,a
D929: or   a
D92A: jp   z,$D9AE
D9AE: ld   a,(ix-$02)
D9B1: ld   (ix+$04),a
D9B4: ld   a,(ix-$01)
D9B7: ld   (ix+$05),a
D9BA: ld   hl,$D9C6
D9BD: push hl
D9BE: call $D8CE
D8CE: push ix
D8D0: ld   ix,$0000
D8D4: add  ix,sp
D8D6: ld   c,(ix+$04)
D8D9: ld   b,(ix+$05)

   (loops for 13 instructions)

D8E8: pop  ix
D8EA: ret
D9C1: ld   sp,ix
D9C3: pop  ix
D9C5: ret
F6B8: pop  af
F6B9: pop  af
F6BA: pop  bc
F6BB: ld   a,c
F6BC: sub  $4D
F6BE: ld   c,a
F6BF: ld   a,b
F6C0: sbc  a,$F4
F6C2: ld   a,c
F6C3: rla
F6C4: sbc  a,a
F6C5: ld   b,a
F6C6: inc  bc
F6C7: sra  b
F6C9: rr   c
F6CB: ld   a,$0B
F6CD: sub  c
F6CE: ld   c,a
F6CF: ld   hl,$F44C
F6D2: ld   (hl),c
F6D3: ld   hl,($F447)
F6D6: ld   a,l
F6D7: and  $70
F6D9: ld   l,a
F6DA: ld   a,c
F6DB: rla
F6DC: sbc  a,a
F6DD: ld   b,a
F6DE: add  hl,bc
F6DF: ld   c,l
F6E0: ld   b,h
F6E1: ld   ($F447),bc
F6E5: ld   sp,ix
F6E7: pop  ix
F6E9: ret
CF12: ld   hl,$F438
CF15: call $D03A
D03A: ret
CF18: ld   hl,$F447
CF1B: call $D03A
D03A: ret
CF1E: ld   hl,$F462
CF21: call $D03A

   (loops for 1 instructions)

CF24: pop  de
CF25: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF9B: call $D2C3
D2C3: ld   a,($D09E)
D2C6: cp   $14
D2C8: ret  z
D2C9: jp   $9005
9005: ld   a,($8FEE)
9008: or   a
9009: ret  nz
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CE34: ld   a,(de)
CE35: inc  de
CE36: ld   ($6FAF),a
CE39: ld   a,(de)
CE3A: bit  5,a
CE3C: jr   nz,$CE52
CE3E: ld   hl,$B0C8
CE41: ld   ($6FB3),hl
CE44: ld   hl,$B11E
CE47: ld   ($6FB5),hl
CE4A: ld   hl,$B19A
CE4D: ld   ($6FB7),hl
CE50: jr   $CE64
CE64: and  $1F
CE66: ld   ($6FB2),a
CE69: inc  de
CE6A: ex   de,hl
CE6B: ld   d,$64
CE6D: ld   e,a
CE6E: call $8C1A
8C1A: xor  a
8C1B: ld   b,$08
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D
8C1D: sla  d
8C1F: rla
8C20: cp   e
8C21: jr   c,$8C25
8C25: djnz $8C1D

   (loops for 9 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 10 instructions)

8C23: sub  e
8C24: inc  d

   (loops for 11 instructions)

8C27: ret
CE71: ld   a,d
CE72: ex   de,hl
CE73: ld   ($6FB0),a
CE76: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CE79: ld   ($6FB9),a
CE7C: push de
CE7D: ld   hl,$601C
CE80: set  1,(hl)
CE82: ld   hl,$601D
CE85: set  1,(hl)
CE87: call $D02A
D02A: ret
CE8A: pop  de
CE8B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CF67: ld   hl,$000A
CF6A: ld   ($5CDC),hl
CF6D: ld   hl,$0014
CF70: ld   ($5CDE),hl
CF73: ld   hl,$0005
CF76: ld   ($5CE0),hl
CF79: push de
CF7A: call $D03E
D03E: ld   l,e
D03F: ld   h,d
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D051: cp   $ED
D053: jr   z,$D057
D057: inc  hl
D058: inc  hl
D059: jr   $D040
D040: ld   a,(hl)
D041: cp   $EA
D043: jr   z,$D056
D045: cp   $E9
D047: jr   z,$D056
D049: cp   $88
D04B: jr   z,$D056
D04D: cp   $FD
D04F: jr   z,$D058
D058: inc  hl
D059: jr   $D040

   (loops for 7 instructions)

D056: inc  hl
D057: inc  hl

   (loops for 11 instructions)

D051: cp   $ED
D053: jr   z,$D057
D055: ret
CF7D: cp   $FC
CF7F: ld   hl,$C24F
CF82: jr   z,$CF9B
CF84: cp   $FB
CF86: ld   hl,$C257
CF89: jr   z,$CF9B
CF8B: cp   $FA
CF8D: ld   hl,$C25F
CF90: jr   z,$CF9B
CF92: cp   $F8
CF94: ld   hl,$C267
CF97: jr   z,$CF9B
CF99: jr   $CF9E
CF9E: call $D2B9
D2B9: ld   hl,($5CDA)
D2BC: inc  hl
D2BD: ld   ($5CDA),hl
D2C0: jp   $CBF0
CBF0: call $7655
7655: ld   hl,$5C91
7658: res  0,(hl)
765A: dec  hl
765B: ld   (hl),$FF
765D: ret
CBF3: ld   bc,$1C10
CBF6: call $7C28
7C28: ld   a,$16
7C2A: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
09FC: cp   $06
09FE: jr   c,$0A69
0A00: cp   $18
0A02: jr   nc,$0A69
0A04: ld   hl,$0A0B
0A07: ld   e,a
0A08: ld   d,$00
0A0A: add  hl,de
0A0B: ld   e,(hl)
0A0C: add  hl,de
0A0D: push hl
0A0E: jp   $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
0A75: ld   de,$0A6D
0A78: jr   $0A7D
0A7D: ld   ($5C0E),a
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C2D: ld   a,c
7C2E: call $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A6D: ld   de,$0A87
0A70: ld   ($5C0F),a
0A73: jr   $0A80
0A80: ld   hl,($5C51)
0A83: ld   (hl),e
0A84: inc  hl
0A85: ld   (hl),d
0A86: ret
15FE: pop  hl
15FF: exx
1600: ret
7C31: ld   a,b
7C32: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
0A87: ld   de,$09F4
0A8A: call $0A80

   (loops for 5 instructions)

0A8D: ld   hl,($5C0E)
0A90: ld   d,a
0A91: ld   a,l
0A92: cp   $16
0A94: jp   c,$2211
0A97: jr   nz,$0AC2
0A99: ld   b,h
0A9A: ld   c,d
0A9B: ld   a,$1F
0A9D: sub  c
0A9E: jr   c,$0AAC
0AA0: add  a,$02
0AA2: ld   c,a
0AA3: bit  1,(iy+$01)
0AA7: jr   nz,$0ABF
0AA9: ld   a,$16
0AAB: sub  b
0AAC: jp   c,$1E9F
0AAF: inc  a
0AB0: ld   b,a
0AB1: inc  b
0AB2: bit  0,(iy+$02)
0AB6: jp   nz,$0C55
0AB9: cp   (iy+$31)
0ABC: jp   c,$0C86
0ABF: jp   $0DD9
0DD9: ld   hl,$5B00
0DDC: bit  1,(iy+$01)
0DE0: jr   nz,$0DF4
0DE2: ld   a,b
0DE3: bit  0,(iy+$02)
0DE7: jr   z,$0DEE
0DEE: push bc
0DEF: ld   b,a
0DF0: call $0E9B
0E9B: ld   a,$18
0E9D: sub  b
0E9E: ld   d,a
0E9F: rrca
0EA0: rrca
0EA1: rrca
0EA2: and  $E0
0EA4: ld   l,a
0EA5: ld   a,d
0EA6: and  $18
0EA8: or   $40
0EAA: ld   h,a
0EAB: ret
0DF3: pop  bc
0DF4: ld   a,$21
0DF6: sub  c
0DF7: ld   e,a
0DF8: ld   d,$00
0DFA: add  hl,de
0DFB: jp   $0ADC
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
CBF9: ld   hl,($5CDA)
CBFC: jp   $7B11
7B11: ld   a,($7B0C)
7B14: push af
7B15: ld   a,$C9
7B17: ld   ($7B0C),a
7B1A: ld   c,$30
7B1C: call $7B26
7B26: ld   de,$2710
7B29: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B2C: ld   de,$03E8
7B2F: call $7AFA
7AFA: ld   b,$2F
7AFC: xor  a
7AFD: inc  b
7AFE: sbc  hl,de
7B00: jp   nc,$7AFD
7B03: add  hl,de
7B04: ld   a,b
7B05: cp   c
7B06: ld   c,$00
7B08: jp   nz,$7444
7B0B: ld   c,a
7B0C: ret
7B32: ld   de,$0064
7B35: call $7AFA

   (loops for 12 instructions)

7B38: ld   de,$000A
7B3B: call $7AFA

   (loops for 19 instructions)

7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B3E: ld   a,$30
7B40: add  a,l
7B41: jp   $7444
7444: ld   iy,$5C3A
7448: jp   $15F2
15F2: exx
15F3: push hl
15F4: ld   hl,($5C51)
15F7: ld   e,(hl)
15F8: inc  hl
15F9: ld   d,(hl)
15FA: ex   de,hl
15FB: call $162C
162C: jp   (hl)
09F4: call $0B03
0B03: bit  1,(iy+$01)
0B07: jr   nz,$0B1D
0B09: ld   bc,($5C88)
0B0D: ld   hl,($5C84)
0B10: bit  0,(iy+$02)
0B14: ret  z
09F7: cp   $20
09F9: jp   nc,$0AD9
0AD9: call $0B24
0B24: cp   $80
0B26: jr   c,$0B65
0B65: push bc
0B66: ld   bc,($5C36)
0B6A: ex   de,hl
0B6B: ld   hl,$5C3B
0B6E: res  0,(hl)
0B70: cp   $20
0B72: jr   nz,$0B76
0B76: ld   h,$00
0B78: ld   l,a
0B79: add  hl,hl
0B7A: add  hl,hl
0B7B: add  hl,hl
0B7C: add  hl,bc
0B7D: pop  bc
0B7E: ex   de,hl
0B7F: ld   a,c
0B80: dec  a
0B81: ld   a,$21
0B83: jr   nz,$0B93
0B93: cp   c
0B94: push de
0B95: call z,$0C55
0B98: pop  de
0B99: push bc
0B9A: push hl
0B9B: ld   a,($5C91)
0B9E: ld   b,$FF
0BA0: rra
0BA1: jr   c,$0BA4
0BA3: inc  b
0BA4: rra
0BA5: rra
0BA6: sbc  a,a
0BA7: ld   c,a
0BA8: ld   a,$08
0BAA: and  a
0BAB: bit  1,(iy+$01)
0BAF: jr   z,$0BB6
0BB6: ex   de,hl
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7
0BB7: ex   af,af'
0BB8: ld   a,(de)
0BB9: and  b
0BBA: xor  (hl)
0BBB: xor  c
0BBC: ld   (de),a
0BBD: ex   af,af'
0BBE: jr   c,$0BD3
0BC0: inc  d
0BC1: inc  hl
0BC2: dec  a
0BC3: jr   nz,$0BB7

   (loops for 72 instructions)

0BC5: ex   de,hl
0BC6: dec  h
0BC7: bit  1,(iy+$01)
0BCB: call z,$0BDB
0BDB: ld   a,h
0BDC: rrca
0BDD: rrca
0BDE: rrca
0BDF: and  $03
0BE1: or   $58
0BE3: ld   h,a
0BE4: ld   de,($5C8F)
0BE8: ld   a,(hl)
0BE9: xor  e
0BEA: and  d
0BEB: xor  e
0BEC: bit  6,(iy+$57)
0BF0: jr   z,$0BFA
0BFA: bit  4,(iy+$57)
0BFE: jr   z,$0C08
0C08: ld   (hl),a
0C09: ret
0BCE: pop  hl
0BCF: pop  bc
0BD0: dec  c
0BD1: inc  hl
0BD2: ret
0ADC: bit  1,(iy+$01)
0AE0: jr   nz,$0AFC
0AE2: bit  0,(iy+$02)
0AE6: jr   nz,$0AF0
0AE8: ld   ($5C88),bc
0AEC: ld   ($5C84),hl
0AEF: ret
15FE: pop  hl
15FF: exx
1600: ret
7B1F: pop  af
7B20: ld   ($7B0C),a
7B23: ret
CFA1: xor  a
CFA2: ld   ($6FAF),a
CFA5: ld   ($6178),a
CFA8: pop  de
CFA9: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)

   (loops for 6 instructions)

CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CE8E: ld   hl,$601C
CE91: set  2,(hl)
CE93: ld   hl,$601D
CE96: set  2,(hl)
CE98: ld   a,(de)
CE99: inc  de
CE9A: ld   ($6013),a
CE9D: call $D01B
D01B: call $D001
D001: ld   a,(de)
D002: inc  de
D003: ld   c,a
D004: ld   a,(de)
D005: inc  de
D006: sub  c
D007: jr   nz,$D00E
D009: call $7789
7789: ld   a,($644E)
778C: ld   b,a
778D: rrca
778E: rrca
778F: rrca
7790: xor  $1F
7792: add  a,b
7793: sbc  a,$FF
7795: ld   ($644E),a
7798: ret
D00C: ld   a,c
D00D: ret
D01E: bit  3,a
D020: ret  z
CEA0: ld   ($6F2F),a
CEA3: push de
CEA4: call $D02E
D02E: ret
CEA7: pop  de
CEA8: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D082: call $CCFF
CCFF: call $77A9
77A9: ld   hl,$644E
77AC: jr   $779C
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
CD02: xor  a
CD03: ld   ($601C),a
CD06: ld   ($601B),a
CD09: ld   ($CCE5),a
CD0C: ld   de,($6022)
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD83: ld   hl,$6024
CD86: inc  (hl)
CD87: ld   de,$F85B
CD8A: jr   $CD10

   (loops for 4 instructions)

CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CF56: call $CF43
CF43: ld   a,($6024)
CF46: or   a
CF47: jr   nz,$CF50
CF50: inc  de
CF51: inc  de
CF52: pop  hl
CF53: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CD41: cp   $EC
CD43: jp   z,$CF0E
CD46: cp   $EB
CD48: jp   z,$CF28
CD4B: cp   $EA
CD4D: jp   z,$CF3A
CD50: cp   $E9
CD52: jp   z,$CF56
CD55: cp   $E7
CD57: jp   z,$CF5F
CD5A: cp   $E6
CD5C: jp   z,$CF67
CD5F: cp   $E5
CD61: jp   z,$CFAC
CD64: cp   $E4
CD66: jp   z,$CFB9
CD69: cp   $E3
CD6B: jp   z,$CFBF
CD6E: cp   $88
CD70: jp   z,$CFC5
CFC5: ex   de,hl
CFC6: ld   e,(hl)
CFC7: inc  hl
CFC8: ld   d,(hl)
CFC9: inc  hl
CFCA: ex   de,hl
CFCB: nop
CFCC: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CEF3: push de
CEF4: ex   de,hl
CEF5: call $D03A
D03A: ret
CEF8: pop  hl
CEF9: ld   de,$0005
CEFC: add  hl,de
CEFD: xor  a
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE
CEFE: cp   (hl)
CEFF: inc  hl
CF00: jr   nz,$CEFE

   (loops for 12 instructions)

CF02: ex   de,hl
CF03: jp   $CD10
CD10: ld   a,(de)
CD11: inc  de
CD12: cp   $E8
CD14: jr   z,$CD83
CD16: cp   $FD
CD18: jr   z,$CD8C
CD1A: cp   $FC
CD1C: jr   z,$CD9A
CD1E: cp   $FB
CD20: jp   z,$CE34
CD23: cp   $FA
CD25: jp   z,$CEAB
CD28: cp   $F9
CD2A: jp   z,$CE8E
CD2D: cp   $F8
CD2F: jp   z,$CEAE
CD32: cp   $EF
CD34: jp   z,$CEEB
CD37: cp   $EE
CD39: jp   z,$CEF3
CD3C: cp   $ED
CD3E: jp   z,$CF06
CF06: ld   a,(de)
CF07: inc  de
CF08: ld   ($D09F),a
CF0B: jp   $CD10

   (loops for 6 instructions)

CD8C: ld   ($6022),de
CD90: ld   a,($CCE5)
CD93: dec  a
CD94: jp   z,$CD10
CD97: jp   $7799
7799: ld   hl,$644A
779C: ld   ($7766),hl
779F: ld   ($777D),hl
77A2: ld   ($778A),hl
77A5: ld   ($7796),hl
77A8: ret
D085: ld   a,($6024)
D088: cp   $02
D08A: jr   nz,$D082
D08C: xor  a
D08D: ld   ($D026),a
D090: ld   ($D02A),a
D093: ld   ($D02E),a
D096: ld   ($D036),a
D099: ld   ($D03A),a
D09C: ret
A667: call $732E
732E: xor  a
732F: ld   ($732D),a
7332: ld   hl,$FFFF
7335: ld   a,$00
7337: call $73F1
73F1: or   $10
73F3: ld   bc,$7FFD
73F6: out  (c),a
73F8: ld   ($5B5C),a
73FB: ret
733A: ld   e,(hl)
733B: ld   (hl),$00
733D: ld   a,$01
733F: call $73F1
73F1: or   $10
73F3: ld   bc,$7FFD
73F6: out  (c),a
73F8: ld   ($5B5C),a
73FB: ret
7342: ld   d,(hl)
7343: ld   (hl),$FF
7345: ld   a,$00
7347: call $73F1

   (loops for 5 instructions)

734A: ld   a,(hl)
734B: ld   (hl),e
734C: or   a
734D: ret  nz
A66A: ld   a,($732D)
A66D: or   a
A66E: jr   z,$A67F
A67F: ld   a,$00
A681: call $A6A3
A6A3: call $73F1

   (loops for 5 instructions)

A6A6: ld   hl,$FE00
A6A9: ld   a,$FD
A6AB: ld   b,$00
A6AD: ld   (hl),a
A6AE: inc  hl
A6AF: djnz $A6AD
A6AD: ld   (hl),a
A6AE: inc  hl
A6AF: djnz $A6AD

   (loops for 762 instructions)

A6B1: ld   (hl),a
A6B2: ld   h,a
A6B3: ld   l,a
A6B4: ld   (hl),$C3
A6B6: inc  hl
A6B7: ld   (hl),$F7
A6B9: inc  hl
A6BA: ld   (hl),$A5
A6BC: ret
A684: ld   a,$FE
A686: ld   i,a
A688: im   2
A68A: call $9042
9042: ld   hl,$0000
9045: ld   ($8FEF),hl
9048: ld   ($8FED),hl
904B: ld   ($3000),a
904E: jp   $8FFB
8FFB: ld   a,($0039)
8FFE: cp   $F1
9000: ret  nz
A68D: ld   a,r
A68F: ld   l,a
A690: ld   h,a
A691: ld   ($644A),hl
A694: ei
A695: ld   a,$00
A697: ld   ($5C6B),a
A69A: ld   hl,$C22F
A69D: ld   ($5C7B),hl
A6A0: jp   $CA38
CA38: call $A2F4
A2F4: ld   a,$00
A2F6: ld   ($9F17),a
A2F9: ld   hl,$A03F
A2FC: call $A305
A305: push bc
A306: push af
A307: ld   a,(hl)
A308: cp   $FF
A30A: jr   z,$A31C
A30C: ld   bc,$FFFD
A30F: out  (c),a
A311: inc  hl
A312: ld   a,(hl)
A313: ld   bc,$BFFD
A316: out  (c),a
A318: inc  hl
A319: jp   $A307
A307: ld   a,(hl)
A308: cp   $FF
A30A: jr   z,$A31C
A30C: ld   bc,$FFFD
A30F: out  (c),a
A311: inc  hl
A312: ld   a,(hl)
A313: ld   bc,$BFFD
A316: out  (c),a
A318: inc  hl
A319: jp   $A307

   (loops for 36 instructions)

A31C: pop  af
A31D: pop  bc
A31E: ret
A2FF: ld   a,$0F
A301: ld   ($9F28),a
A304: ret
CA3B: call $83AF
83AF: ld   hl,$5800
83B2: ld   de,$000A
83B5: ld   c,$18
83B7: ld   a,$C7
83B9: ld   b,$16
83BB: and  (hl)
83BC: ld   (hl),a
83BD: inc  hl
83BE: djnz $83BB
83BB: and  (hl)
83BC: ld   (hl),a
83BD: inc  hl
83BE: djnz $83BB

   (loops for 80 instructions)

83C0: add  hl,de
83C1: dec  c
83C2: jr   nz,$83B9
83B9: ld   b,$16

   (loops for 88 instructions)

83C0: add  hl,de
83C1: dec  c
83C2: jr   nz,$83B9

   (loops for 2024 instructions)

83C4: ret
CA3E: call $933A
933A: ld   hl,$A700
933D: ld   a,l
933E: and  $07
9340: or   $40
9342: ld   d,a
9343: ld   a,l
9344: rra
9345: rra
9346: rra
9347: and  $18
9349: or   d
934A: ld   d,a
934B: ld   a,l
934C: rla
934D: rla
934E: and  $E0
9350: ld   (hl),a
9351: inc  h
9352: ld   (hl),d
9353: dec  h
9354: inc  l
9355: ld   a,l
9356: cp   $C0
9358: jr   nz,$933D
933D: ld   a,l
933E: and  $07
9340: or   $40
9342: ld   d,a
9343: ld   a,l
9344: rra
9345: rra
9346: rra
9347: and  $18
9349: or   d
934A: ld   d,a
934B: ld   a,l
934C: rla
934D: rla
934E: and  $E0
9350: ld   (hl),a
9351: inc  h
9352: ld   (hl),d
9353: dec  h
9354: inc  l
9355: ld   a,l
9356: cp   $C0
9358: jr   nz,$933D

   (loops for 2224 instructions)

FDFD: jp   $A5F7
A5F7: push af
A5F8: push hl
A5F9: push de
A5FA: push bc
A5FB: push ix
A5FD: ld   hl,$5C78
A600: inc  (hl)
A601: call $A38C
A38C: call $A568
A568: ld   ix,$9F18
A56C: ld   e,$08
A56E: ld   d,$03
A570: ld   a,(ix+$00)
A573: cp   $01
A575: jr   z,$A57E
A577: inc  ix
A579: inc  e
A57A: dec  d
A57B: jr   nz,$A570
A570: ld   a,(ix+$00)
A573: cp   $01
A575: jr   z,$A57E
A577: inc  ix
A579: inc  e
A57A: dec  d
A57B: jr   nz,$A570

   (loops for 7 instructions)

A57D: ret
A38F: ld   hl,$9F14
A392: dec  (hl)
A393: ret  nz
A394: ld   (hl),$02
A396: ld   a,($9F17)
A399: or   a
A39A: ret  z
A604: ld   a,($8FEE)
A607: or   a
A608: jr   z,$A618
A618: ld   hl,$63B4
A61B: ld   a,(hl)
A61C: dec  a
A61D: jr   nz,$A656
A656: ld   (hl),a
A657: pop  ix
A659: pop  bc
A65A: pop  de
A65B: pop  hl
A65C: pop  af
A65D: ei
A65E: reti
9351: inc  h
9352: ld   (hl),d
9353: dec  h
9354: inc  l
9355: ld   a,l
9356: cp   $C0
9358: jr   nz,$933D
933D: ld   a,l
933E: and  $07
9340: or   $40
9342: ld   d,a
9343: ld   a,l
9344: rra
9345: rra
9346: rra
9347: and  $18
9349: or   d
934A: ld   d,a
934B: ld   a,l
934C: rla
934D: rla
934E: and  $E0
9350: ld   (hl),a
9351: inc  h
9352: ld   (hl),d
9353: dec  h
9354: inc  l
9355: ld   a,l
9356: cp   $C0
9358: jr   nz,$933D
933D: ld   a,l
933E: and  $07
9340: or   $40
9342: ld   d,a
9343: ld   a,l
9344: rra
9345: rra
9346: rra
9347: and  $18
9349: or   d
934A: ld   d,a
934B: ld   a,l
934C: rla
934D: rla
934E: and  $E0
9350: ld   (hl),a

   (loops for 2100 instructions)

935A: ld   de,$A6C2
935D: ld   (hl),e
935E: inc  h
935F: ld   (hl),d
9360: dec  h
9361: inc  l
9362: jr   nz,$935D
935D: ld   (hl),e
935E: inc  h
935F: ld   (hl),d
9360: dec  h
9361: inc  l
9362: jr   nz,$935D

   (loops for 372 instructions)

9364: ret
CA41: call $924F
924F: ld   hl,$ADA0
9252: ld   de,$AE64
9255: call $91B2
91B2: push de
91B3: ld   a,(hl)
91B4: ld   ($91FF),a
91B7: inc  hl
91B8: ld   c,(hl)
91B9: inc  hl
91BA: ld   e,(hl)
91BB: inc  hl
91BC: push hl
91BD: pop  ix
91BF: ld   h,(hl)
91C0: ld   l,e
91C1: ld   e,(hl)
91C2: push hl
91C3: ld   h,a
91C4: ld   a,c
91C5: call $8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 5 instructions)

8B95: add  hl,de

   (loops for 6 instructions)

8B95: add  hl,de

   (loops for 4 instructions)

8B98: ret
91C8: ld   b,h
91C9: ld   c,l
91CA: pop  de
91CB: add  hl,de
91CC: inc  hl
91CD: neg
91CF: and  $07
91D1: cp   $07
91D3: jr   z,$91EE
91D5: and  $07
91D7: push af
91D8: jr   z,$91E2
91DA: push af
91DB: call $9200
9200: push bc
9201: inc  ix
9203: ld   (ix+$00),l
9206: ld   (ix+$01),h
9209: inc  ix
920B: ld   a,(de)
920C: ld   (hl),a
920D: inc  de
920E: inc  hl
920F: xor  a
9210: ld   a,(de)
9211: rra
9212: ld   (hl),a
9213: inc  de
9214: cpi
9216: jp   pe,$9210
9210: ld   a,(de)
9211: rra
9212: ld   (hl),a
9213: inc  de
9214: cpi
9216: jp   pe,$9210

   (loops for 108 instructions)

9219: pop  bc
921A: ret
91DE: pop  af
91DF: dec  a
91E0: jr   $91D8
91D8: jr   z,$91E2
91DA: push af
91DB: call $9200
9200: push bc
9201: inc  ix
9203: ld   (ix+$00),l
9206: ld   (ix+$01),h
9209: inc  ix
920B: ld   a,(de)
920C: ld   (hl),a
920D: inc  de
920E: inc  hl
920F: xor  a

   (loops for 120 instructions)

9219: pop  bc
921A: ret
91DE: pop  af
91DF: dec  a
91E0: jr   $91D8

   (loops for 553 instructions)

91E2: call $921B
921B: push bc
921C: inc  ix
921E: ld   (ix+$00),l
9221: ld   (ix+$01),h
9224: inc  ix
9226: ld   a,(de)
9227: ld   b,a
9228: inc  a
9229: ld   (hl),a
922A: inc  de
922B: inc  hl
922C: ld   a,($91FF)
922F: ld   c,a
9230: push bc
9231: xor  a
9232: ld   a,(de)
9233: rra
9234: ld   (hl),a
9235: inc  de
9236: inc  hl
9237: djnz $9232
9232: ld   a,(de)
9233: rra
9234: ld   (hl),a
9235: inc  de
9236: inc  hl
9237: djnz $9232
9239: ld   a,$00
923B: rra
923C: ld   (hl),a
923D: inc  hl
923E: pop  bc
923F: dec  c
9240: jr   nz,$9230
9230: push bc
9231: xor  a

   (loops for 12 instructions)

9239: ld   a,$00
923B: rra
923C: ld   (hl),a
923D: inc  hl
923E: pop  bc
923F: dec  c
9240: jr   nz,$9230

   (loops for 168 instructions)

9242: pop  bc
9243: push hl
9244: ld   a,($91FF)
9247: ld   l,a
9248: ld   h,$00
924A: add  hl,bc
924B: ld   c,l
924C: ld   b,h
924D: pop  hl
924E: ret
91E5: pop  af
91E6: neg
91E8: add  a,$06
91EA: and  $07
91EC: jr   z,$91F6
91F6: pop  de
91F7: xor  a
91F8: sbc  hl,de
91FA: ret  z
9258: ld   hl,$B3B3
925B: ld   de,$B920
925E: call $91B2
91B2: push de
91B3: ld   a,(hl)
91B4: ld   ($91FF),a
91B7: inc  hl
91B8: ld   c,(hl)
91B9: inc  hl
91BA: ld   e,(hl)
91BB: inc  hl
91BC: push hl
91BD: pop  ix
91BF: ld   h,(hl)
91C0: ld   l,e
91C1: ld   e,(hl)
91C2: push hl
91C3: ld   h,a
91C4: ld   a,c
91C5: call $8B88
8B88: ld   l,$00
8B8A: ld   d,l
8B8B: sla  h
8B8D: jr   nc,$8B90
8B90: ld   b,$07
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92
8B92: add  hl,hl
8B93: jr   nc,$8B96
8B96: djnz $8B92

   (loops for 2 instructions)

8B95: add  hl,de

   (loops for 3 instructions)

8B95: add  hl,de

   (loops for 12 instructions)

8B98: ret
91C8: ld   b,h
91C9: ld   c,l
91CA: pop  de
91CB: add  hl,de
91CC: inc  hl
91CD: neg
91CF: and  $07
91D1: cp   $07
91D3: jr   z,$91EE
91D5: and  $07
91D7: push af
91D8: jr   z,$91E2
91E2: call $921B
921B: push bc
921C: inc  ix
921E: ld   (ix+$00),l
9221: ld   (ix+$01),h
9224: inc  ix
9226: ld   a,(de)
9227: ld   b,a
9228: inc  a
9229: ld   (hl),a
922A: inc  de
922B: inc  hl
922C: ld   a,($91FF)
922F: ld   c,a
9230: push bc
9231: xor  a
9232: ld   a,(de)
9233: rra
9234: ld   (hl),a
9235: inc  de
9236: inc  hl
9237: djnz $9232
9232: ld   a,(de)
9233: rra
9234: ld   (hl),a
9235: inc  de
9236: inc  hl
9237: djnz $9232

   (loops for 18 instructions)

9239: ld   a,$00
923B: rra
923C: ld   (hl),a
923D: inc  hl
923E: pop  bc
923F: dec  c
9240: jr   nz,$9230
9230: push bc
9231: xor  a

   (loops for 30 instructions)

9239: ld   a,$00
923B: rra
923C: ld   (hl),a
923D: inc  hl
923E: pop  bc
923F: dec  c
9240: jr   nz,$9230

   (loops for 1053 instructions)

9242: pop  bc
9243: push hl
9244: ld   a,($91FF)
9247: ld   l,a
9248: ld   h,$00
924A: add  hl,bc
924B: ld   c,l
924C: ld   b,h
924D: pop  hl
924E: ret
91E5: pop  af
91E6: neg
91E8: add  a,$06
91EA: and  $07
91EC: jr   z,$91F6
91EE: push af
91EF: call $9200
9200: push bc
9201: inc  ix
9203: ld   (ix+$00),l
9206: ld   (ix+$01),h
9209: inc  ix
920B: ld   a,(de)
920C: ld   (hl),a
920D: inc  de
920E: inc  hl
920F: xor  a
9210: ld   a,(de)
9211: rra
9212: ld   (hl),a
9213: inc  de
9214: cpi
9216: jp   pe,$9210
9210: ld   a,(de)
9211: rra
9212: ld   (hl),a
9213: inc  de
9214: cpi
9216: jp   pe,$9210

   (loops for 1032 instructions)

9219: pop  bc
921A: ret
91F2: pop  af
91F3: dec  a
91F4: jr   $91EC
91EC: jr   z,$91F6
91EE: push af
91EF: call $9200
9200: push bc
9201: inc  ix
9203: ld   (ix+$00),l
9206: ld   (ix+$01),h
9209: inc  ix
920B: ld   a,(de)
920C: ld   (hl),a
920D: inc  de
920E: inc  hl
920F: xor  a

   (loops for 1044 instructions)

9219: pop  bc
921A: ret
91F2: pop  af
91F3: dec  a
91F4: jr   $91EC

   (loops for 2339 instructions)

FDFD: jp   $A5F7
A5F7: push af
A5F8: push hl
A5F9: push de
A5FA: push bc
A5FB: push ix
A5FD: ld   hl,$5C78
A600: inc  (hl)
A601: call $A38C
A38C: call $A568
A568: ld   ix,$9F18
A56C: ld   e,$08
A56E: ld   d,$03
A570: ld   a,(ix+$00)
A573: cp   $01
A575: jr   z,$A57E
A577: inc  ix
A579: inc  e
A57A: dec  d
A57B: jr   nz,$A570
A570: ld   a,(ix+$00)
A573: cp   $01
A575: jr   z,$A57E
A577: inc  ix
A579: inc  e
A57A: dec  d
A57B: jr   nz,$A570

   (loops for 7 instructions)

A57D: ret
A38F: ld   hl,$9F14
A392: dec  (hl)
A393: ret  nz
A604: ld   a,($8FEE)
A607: or   a
A608: jr   z,$A618
A618: ld   hl,$63B4
A61B: ld   a,(hl)
A61C: dec  a
A61D: jr   nz,$A656
A656: ld   (hl),a
A657: pop  ix
A659: pop  bc
A65A: pop  de
A65B: pop  hl
A65C: pop  af
A65D: ei
A65E: reti
9214: cpi
9216: jp   pe,$9210
9210: ld   a,(de)
9211: rra
9212: ld   (hl),a
9213: inc  de
9214: cpi
9216: jp   pe,$9210
9210: ld   a,(de)
9211: rra
9212: ld   (hl),a